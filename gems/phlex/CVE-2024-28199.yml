---
gem: phlex
cve: 2024-28199
ghsa: 242p-4v39-2v8g
url: https://github.com/phlex-ruby/phlex/security/advisories/GHSA-242p-4v39-2v8g
title: Cross-site Scripting (XSS) possible with maliciously formed HTML attribute
  names and values in Phlex
date: 2024-03-12
description: |-
  There is a potential cross-site scripting (XSS) vulnerability that can be exploited via maliciously crafted user data. This was due to improper case-sensitivity in the code that was meant to prevent these attacks.

  ### Impact

  If you render an `<a>` tag with an `href` attribute set to a user-provided link, that link could potentially execute JavaScript when clicked by another user.

  ```ruby
  a(href: user_profile) { "Profile" }
  ```

  If you splat user-provided attributes when rendering any HTML or SVG tag, malicious event attributes could be included in the output, executing JavaScript when the events are triggered by another user.

  ```ruby
  h1(**JSON.parse(user_attributes))
  ```

  ### Patches
  Patches are [available on RubyGems](https://rubygems.org/gems/phlex) for all `1.x` minor versions. The patched versions are:

  - [1.9.1](https://rubygems.org/gems/phlex/versions/1.9.1)
  - [1.8.2](https://rubygems.org/gems/phlex/versions/1.8.2)
  - [1.7.1](https://rubygems.org/gems/phlex/versions/1.7.1)
  - [1.6.2](https://rubygems.org/gems/phlex/versions/1.6.2)
  - [1.5.2](https://rubygems.org/gems/phlex/versions/1.5.2)
  - [1.4.1](https://rubygems.org/gems/phlex/versions/1.4.1)
  - [1.3.3](https://rubygems.org/gems/phlex/versions/1.3.3)
  - [1.2.2](https://rubygems.org/gems/phlex/versions/1.2.2)
  - [1.1.1](https://rubygems.org/gems/phlex/versions/1.1.1)
  - [1.0.1](https://rubygems.org/gems/phlex/versions/1.0.1)

  If you are on `main`, it has been patched since [`aa50c60`](https://github.com/phlex-ruby/phlex/commit/aa50c604cdee1d0ce7ef068a4c66cbd5d43f96a1)

  ### Workarounds
  Configuring a [Content Security Policy](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy) that does not allow [`unsafe-inline`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy#unsafe-inline) would effectively prevent this vulnerability from being exploited.

  ### References

  In addition to upgrading to a patched version of Phlex, we strongly recommend configuring a Content Security Policy header that does not allow `unsafe-inline`. Here’s how you can configure a Content Security Policy header in Rails. https://guides.rubyonrails.org/security.html#content-security-policy-header
cvss_v3: 7.1
unaffected_versions:
- "<OPTIONAL: FILL IN SEE BELOW>"
patched_versions:
- "<FILL IN SEE BELOW>"


# GitHub advisory data below - **Remove this data before committing**
# Use this data to write patched_versions (and potentially unaffected_versions) above
---
identifiers:
- type: GHSA
  value: GHSA-242p-4v39-2v8g
- type: CVE
  value: CVE-2024-28199
summary: Cross-site Scripting (XSS) possible with maliciously formed HTML attribute
  names and values in Phlex
description: |-
  There is a potential cross-site scripting (XSS) vulnerability that can be exploited via maliciously crafted user data. This was due to improper case-sensitivity in the code that was meant to prevent these attacks.

  ### Impact

  If you render an `<a>` tag with an `href` attribute set to a user-provided link, that link could potentially execute JavaScript when clicked by another user.

  ```ruby
  a(href: user_profile) { "Profile" }
  ```

  If you splat user-provided attributes when rendering any HTML or SVG tag, malicious event attributes could be included in the output, executing JavaScript when the events are triggered by another user.

  ```ruby
  h1(**JSON.parse(user_attributes))
  ```

  ### Patches
  Patches are [available on RubyGems](https://rubygems.org/gems/phlex) for all `1.x` minor versions. The patched versions are:

  - [1.9.1](https://rubygems.org/gems/phlex/versions/1.9.1)
  - [1.8.2](https://rubygems.org/gems/phlex/versions/1.8.2)
  - [1.7.1](https://rubygems.org/gems/phlex/versions/1.7.1)
  - [1.6.2](https://rubygems.org/gems/phlex/versions/1.6.2)
  - [1.5.2](https://rubygems.org/gems/phlex/versions/1.5.2)
  - [1.4.1](https://rubygems.org/gems/phlex/versions/1.4.1)
  - [1.3.3](https://rubygems.org/gems/phlex/versions/1.3.3)
  - [1.2.2](https://rubygems.org/gems/phlex/versions/1.2.2)
  - [1.1.1](https://rubygems.org/gems/phlex/versions/1.1.1)
  - [1.0.1](https://rubygems.org/gems/phlex/versions/1.0.1)

  If you are on `main`, it has been patched since [`aa50c60`](https://github.com/phlex-ruby/phlex/commit/aa50c604cdee1d0ce7ef068a4c66cbd5d43f96a1)

  ### Workarounds
  Configuring a [Content Security Policy](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy) that does not allow [`unsafe-inline`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy#unsafe-inline) would effectively prevent this vulnerability from being exploited.

  ### References

  In addition to upgrading to a patched version of Phlex, we strongly recommend configuring a Content Security Policy header that does not allow `unsafe-inline`. Here’s how you can configure a Content Security Policy header in Rails. https://guides.rubyonrails.org/security.html#content-security-policy-header
severity: HIGH
cvss:
  score: 7.1
  vectorString: CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:L/A:N
references:
- url: https://github.com/phlex-ruby/phlex/security/advisories/GHSA-242p-4v39-2v8g
- url: https://nvd.nist.gov/vuln/detail/CVE-2024-28199
- url: https://github.com/phlex-ruby/phlex/commit/aa50c604cdee1d0ce7ef068a4c66cbd5d43f96a1
- url: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy
- url: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy#unsafe-inline
- url: https://github.com/advisories/GHSA-242p-4v39-2v8g
publishedAt: '2024-03-12T15:39:46Z'
withdrawnAt: 
vulnerabilities:
- package:
    name: phlex
    ecosystem: RUBYGEMS
  vulnerableVersionRange: "< 1.0.1"
  firstPatchedVersion:
    identifier: 1.0.1
- package:
    name: phlex
    ecosystem: RUBYGEMS
  vulnerableVersionRange: "= 1.1.0"
  firstPatchedVersion:
    identifier: 1.1.1
- package:
    name: phlex
    ecosystem: RUBYGEMS
  vulnerableVersionRange: ">= 1.2.0, < 1.2.2"
  firstPatchedVersion:
    identifier: 1.2.2
- package:
    name: phlex
    ecosystem: RUBYGEMS
  vulnerableVersionRange: ">= 1.3.0, < 1.3.3"
  firstPatchedVersion:
    identifier: 1.3.3
- package:
    name: phlex
    ecosystem: RUBYGEMS
  vulnerableVersionRange: "= 1.4.0"
  firstPatchedVersion:
    identifier: 1.4.1
- package:
    name: phlex
    ecosystem: RUBYGEMS
  vulnerableVersionRange: ">= 1.5.0, < 1.5.2"
  firstPatchedVersion:
    identifier: 1.5.2
- package:
    name: phlex
    ecosystem: RUBYGEMS
  vulnerableVersionRange: ">= 1.6.0, < 1.6.2"
  firstPatchedVersion:
    identifier: 1.6.2
- package:
    name: phlex
    ecosystem: RUBYGEMS
  vulnerableVersionRange: "= 1.7.0"
  firstPatchedVersion:
    identifier: 1.7.1
- package:
    name: phlex
    ecosystem: RUBYGEMS
  vulnerableVersionRange: ">= 1.8.0, < 1.8.2"
  firstPatchedVersion:
    identifier: 1.8.2
- package:
    name: phlex
    ecosystem: RUBYGEMS
  vulnerableVersionRange: "= 1.9.0"
  firstPatchedVersion:
    identifier: 1.9.1
