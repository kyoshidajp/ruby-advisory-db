---
gem: unpoly-rails
cve: 2023-28846
ghsa: m875-3xf6-mf78
url: https://github.com/unpoly/unpoly-rails/security/advisories/GHSA-m875-3xf6-mf78
title: unpoly-rails Denial of Service vulnerability
date: 2023-03-30
description: "There is a possible Denial of Service (DoS) vulnerability in the unpoly-rails
  gem that implements the [Unpoly server protocol](https://unpoly.com/up.protocol)
  for Rails applications.\n\n### Impact\n\nThis issues affects Rails applications
  that operate as an upstream of a load balancer's that uses [passive health checks](https://docs.nginx.com/nginx/admin-guide/load-balancer/http-health-check/#passive-health-checks).\n\nThe
  [unpoly-rails](https://github.com/unpoly/unpoly-rails/) gem echoes the request URL
  as an `X-Up-Location` response header. By making a request with exceedingly long
  URLs (paths or query string), an attacker can cause unpoly-rails to write a exceedingly
  large response header.\n\nIf the response header is too large to be parsed by a
  load balancer downstream of the Rails application, it may cause the load balancer
  to remove the upstream from a load balancing group. This causes that application
  instance to become unavailable until a configured timeout is reached or until an
  active healthcheck succeeds.\n\n\n### Patches\n\nThe fixed release 2.7.2.2+ is available
  via RubyGems and GitHub.\n\n\n### Workarounds\n\nIf you cannot upgrade to a fixed
  release, several workarounds are available:\n\n- Configure your load balancer to
  use active health checks, e.g. by periodically requesting a route with a known response
  that indicates healthiness.\n- Configure your load balancer so the [maximum size
  of response headers](https://makandracards.com/operations/537537-nginx-proxy-buffer-tuning)
  is at least twice the [maximum size of a URL](https://tryhexadecimal.com/guides/http/414-request-uri-too-long).\n-
  Instead of changing your server configuration you may also configure your Rails
  application to delete redundant `X-Up-Location` headers set by unpoly-rails:\n  \n
  \ ```ruby\n  class ApplicationController < ActionController::Base\n  \n    after_action
  :remove_redundant_up_location_header\n    \n    private\n    \n    def remove_redundant_up_location_header\n
  \     if request.original_url == response.headers['X-Up-Location']\n        response.headers.delete('X-Up-Location')\n
  \     end\n    end\n  \n  end\n  ```\n\n### References\n\n- [Common HTTP Response
  Header Limits](https://maxchadwick.xyz/blog/http-response-header-size-limits)\n-
  [Nginx Proxy buffer tuning](https://makandracards.com/operations/537537-nginx-proxy-buffer-tuning)\n-
  [414 Request-URI too long](https://tryhexadecimal.com/guides/http/414-request-uri-too-long)\n-
  [Unpoly server protocol](https://unpoly.com/up.protocol)\n"
cvss_v3: 5.9
unaffected_versions:
- "<OPTIONAL: FILL IN SEE BELOW>"
patched_versions:
- "<FILL IN SEE BELOW>"


# GitHub advisory data below - **Remove this data before committing**
# Use this data to write patched_versions (and potentially unaffected_versions) above
---
identifiers:
- type: GHSA
  value: GHSA-m875-3xf6-mf78
- type: CVE
  value: CVE-2023-28846
summary: unpoly-rails Denial of Service vulnerability
description: "There is a possible Denial of Service (DoS) vulnerability in the unpoly-rails
  gem that implements the [Unpoly server protocol](https://unpoly.com/up.protocol)
  for Rails applications.\n\n### Impact\n\nThis issues affects Rails applications
  that operate as an upstream of a load balancer's that uses [passive health checks](https://docs.nginx.com/nginx/admin-guide/load-balancer/http-health-check/#passive-health-checks).\n\nThe
  [unpoly-rails](https://github.com/unpoly/unpoly-rails/) gem echoes the request URL
  as an `X-Up-Location` response header. By making a request with exceedingly long
  URLs (paths or query string), an attacker can cause unpoly-rails to write a exceedingly
  large response header.\n\nIf the response header is too large to be parsed by a
  load balancer downstream of the Rails application, it may cause the load balancer
  to remove the upstream from a load balancing group. This causes that application
  instance to become unavailable until a configured timeout is reached or until an
  active healthcheck succeeds.\n\n\n### Patches\n\nThe fixed release 2.7.2.2+ is available
  via RubyGems and GitHub.\n\n\n### Workarounds\n\nIf you cannot upgrade to a fixed
  release, several workarounds are available:\n\n- Configure your load balancer to
  use active health checks, e.g. by periodically requesting a route with a known response
  that indicates healthiness.\n- Configure your load balancer so the [maximum size
  of response headers](https://makandracards.com/operations/537537-nginx-proxy-buffer-tuning)
  is at least twice the [maximum size of a URL](https://tryhexadecimal.com/guides/http/414-request-uri-too-long).\n-
  Instead of changing your server configuration you may also configure your Rails
  application to delete redundant `X-Up-Location` headers set by unpoly-rails:\n  \n
  \ ```ruby\n  class ApplicationController < ActionController::Base\n  \n    after_action
  :remove_redundant_up_location_header\n    \n    private\n    \n    def remove_redundant_up_location_header\n
  \     if request.original_url == response.headers['X-Up-Location']\n        response.headers.delete('X-Up-Location')\n
  \     end\n    end\n  \n  end\n  ```\n\n### References\n\n- [Common HTTP Response
  Header Limits](https://maxchadwick.xyz/blog/http-response-header-size-limits)\n-
  [Nginx Proxy buffer tuning](https://makandracards.com/operations/537537-nginx-proxy-buffer-tuning)\n-
  [414 Request-URI too long](https://tryhexadecimal.com/guides/http/414-request-uri-too-long)\n-
  [Unpoly server protocol](https://unpoly.com/up.protocol)\n"
severity: MODERATE
cvss:
  score: 5.9
  vectorString: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H
references:
- url: https://github.com/unpoly/unpoly-rails/security/advisories/GHSA-m875-3xf6-mf78
- url: https://nvd.nist.gov/vuln/detail/CVE-2023-28846
- url: https://github.com/unpoly/unpoly-rails/commit/cd9ad0007daceeb3b2354fdcab4f88350427bf16
- url: https://docs.nginx.com/nginx/admin-guide/load-balancer/http-health-check/#passive-health-checks
- url: https://github.com/unpoly/unpoly-rails/
- url: https://makandracards.com/operations/537537-nginx-proxy-buffer-tuning
- url: https://tryhexadecimal.com/guides/http/414-request-uri-too-long
- url: https://unpoly.com/up.protocol
- url: https://github.com/advisories/GHSA-m875-3xf6-mf78
publishedAt: '2023-03-30T22:58:38Z'
withdrawnAt: 
vulnerabilities:
- package:
    name: unpoly-rails
    ecosystem: RUBYGEMS
  vulnerableVersionRange: "< 2.7.2.2"
  firstPatchedVersion:
    identifier: 2.7.2.2
