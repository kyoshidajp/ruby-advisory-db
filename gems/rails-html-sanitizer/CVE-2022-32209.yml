---
gem: rails-html-sanitizer
cve: 2022-32209
ghsa: pg8v-g4xq-hww9
url: https://hackerone.com/reports/1530898
title: Rails::Html::Sanitizer vulnerable to Cross-site Scripting
date: 2022-06-25
description: "Versions of Rails::Html::Sanitizer prior to version 1.4.3 are vulnerable
  to XSS with certain configurations of Rails::Html::Sanitizer which  allows an attacker
  to inject content when the application developer has overridden the sanitizer's
  allowed tags to allow both `select` and `style` elements. Code is only impacted
  if allowed tags are being overridden. \n\nThis may be done via application configuration:
  ```ruby# In config/application.rbconfig.action_view.sanitized_allowed_tags = [\"select\",
  \"style\"]```\n\nsee https://guides.rubyonrails.org/configuring.html#configuring-action-view\n\nOr
  it may be done with a `:tags` option to the Action View helper `sanitize`: ```<%=
  sanitize @comment.body, tags: [\"select\", \"style\"] %>``` \n\nsee https://api.rubyonrails.org/classes/ActionView/Helpers/SanitizeHelper.html#method-i-sanitize
  \n\nIt may also be done with Rails::Html::SafeListSanitizer directly: \n```ruby#
  class-level optionRails::Html::SafeListSanitizer.allowed_tags = [\"select\", \"style\"]```
  \ or with\n```ruby# instance-level optionRails::Html::SafeListSanitizer.new.sanitize(@article.body,
  tags: [\"select\", \"style\"])```\n\nAll users overriding the allowed tags by any
  of the above mechanisms to include both \"select\" and \"style\" are recommended
  to upgrade immediately. A workaround for this issue can be applied by removing either
  `select` or `style` from the overridden allowed tags."
unaffected_versions:
- "<OPTIONAL: FILL IN SEE BELOW>"
patched_versions:
- "<FILL IN SEE BELOW>"


# GitHub advisory data below - **Remove this data before committing**
# Use this data to write patched_versions (and potentially unaffected_versions) above
---
identifiers:
- type: GHSA
  value: GHSA-pg8v-g4xq-hww9
- type: CVE
  value: CVE-2022-32209
summary: Rails::Html::Sanitizer vulnerable to Cross-site Scripting
description: "Versions of Rails::Html::Sanitizer prior to version 1.4.3 are vulnerable
  to XSS with certain configurations of Rails::Html::Sanitizer which  allows an attacker
  to inject content when the application developer has overridden the sanitizer's
  allowed tags to allow both `select` and `style` elements. Code is only impacted
  if allowed tags are being overridden. \n\nThis may be done via application configuration:
  ```ruby# In config/application.rbconfig.action_view.sanitized_allowed_tags = [\"select\",
  \"style\"]```\n\nsee https://guides.rubyonrails.org/configuring.html#configuring-action-view\n\nOr
  it may be done with a `:tags` option to the Action View helper `sanitize`: ```<%=
  sanitize @comment.body, tags: [\"select\", \"style\"] %>``` \n\nsee https://api.rubyonrails.org/classes/ActionView/Helpers/SanitizeHelper.html#method-i-sanitize
  \n\nIt may also be done with Rails::Html::SafeListSanitizer directly: \n```ruby#
  class-level optionRails::Html::SafeListSanitizer.allowed_tags = [\"select\", \"style\"]```
  \ or with\n```ruby# instance-level optionRails::Html::SafeListSanitizer.new.sanitize(@article.body,
  tags: [\"select\", \"style\"])```\n\nAll users overriding the allowed tags by any
  of the above mechanisms to include both \"select\" and \"style\" are recommended
  to upgrade immediately. A workaround for this issue can be applied by removing either
  `select` or `style` from the overridden allowed tags."
severity: MODERATE
cvss:
  score: 0.0
  vectorString: 
references:
- url: https://nvd.nist.gov/vuln/detail/CVE-2022-32209
- url: https://hackerone.com/reports/1530898
- url: https://github.com/rubysec/ruby-advisory-db/blob/master/gems/rails-html-sanitizer/CVE-2022-32209.yml
- url: https://groups.google.com/g/rubyonrails-security/c/ce9PhUANQ6s
- url: https://github.com/advisories/GHSA-pg8v-g4xq-hww9
publishedAt: '2022-06-25T00:00:54Z'
withdrawnAt: 
vulnerabilities:
- package:
    name: rails-html-sanitizer
    ecosystem: RUBYGEMS
  vulnerableVersionRange: "< 1.4.3"
  firstPatchedVersion:
    identifier: 1.4.3
