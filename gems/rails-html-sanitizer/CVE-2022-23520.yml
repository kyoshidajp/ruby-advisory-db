---
gem: rails-html-sanitizer
cve: 2022-23520
ghsa: rrfc-7g8p-99q8
url: https://github.com/rails/rails-html-sanitizer/security/advisories/GHSA-rrfc-7g8p-99q8
title: Possible XSS vulnerability with certain configurations of rails-html-sanitizer
date: 2022-12-13
description: |
  ## Summary

  There is a possible XSS vulnerability with certain configurations of Rails::Html::Sanitizer. This is due to an incomplete fix of CVE-2022-32209.

  - Versions affected: ALL
  - Not affected: NONE
  - Fixed versions: 1.4.4


  ## Impact

  A possible XSS vulnerability with certain configurations of Rails::Html::Sanitizer may allow an attacker to inject content if the application developer has overridden the sanitizer's allowed tags to allow both "select" and "style" elements.

  Code is only impacted if allowed tags are being overridden using either of the following two mechanisms:

  1. Using the Rails configuration `config.action_view.sanitized_allow_tags=`:

    ```ruby
    # In config/application.rb
    config.action_view.sanitized_allowed_tags = ["select", "style"]
    ```

    (see https://guides.rubyonrails.org/configuring.html#configuring-action-view)

  2. Using the class method `Rails::Html::SafeListSanitizer.allowed_tags=`:

    ```ruby
    # class-level option
    Rails::Html::SafeListSanitizer.allowed_tags = ["select", "style"]
    ```

  All users overriding the allowed tags by either of the above mechanisms to include both "select" and "style" should either upgrade or use one of the workarounds immediately.

  NOTE: Code is _not_ impacted if allowed tags are overridden using either of the following mechanisms:

  - the `:tags` option to the Action View helper method `sanitize`.
  - the `:tags` option to the instance method `SafeListSanitizer#sanitize`.


  ## Workarounds

  Remove either "select" or "style" from the overridden allowed tags.


  ## References

  - [CWE - CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') (4.9)](https://cwe.mitre.org/data/definitions/79.html)
  - https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-32209
  - https://hackerone.com/reports/1654310


  ## Credit

  This vulnerability was responsibly reported by Dominic Breuker.
unaffected_versions:
- "<OPTIONAL: FILL IN SEE BELOW>"
patched_versions:
- "<FILL IN SEE BELOW>"


# GitHub advisory data below - **Remove this data before committing**
# Use this data to write patched_versions (and potentially unaffected_versions) above
---
identifiers:
- type: GHSA
  value: GHSA-rrfc-7g8p-99q8
- type: CVE
  value: CVE-2022-23520
summary: Possible XSS vulnerability with certain configurations of rails-html-sanitizer
description: |
  ## Summary

  There is a possible XSS vulnerability with certain configurations of Rails::Html::Sanitizer. This is due to an incomplete fix of CVE-2022-32209.

  - Versions affected: ALL
  - Not affected: NONE
  - Fixed versions: 1.4.4


  ## Impact

  A possible XSS vulnerability with certain configurations of Rails::Html::Sanitizer may allow an attacker to inject content if the application developer has overridden the sanitizer's allowed tags to allow both "select" and "style" elements.

  Code is only impacted if allowed tags are being overridden using either of the following two mechanisms:

  1. Using the Rails configuration `config.action_view.sanitized_allow_tags=`:

    ```ruby
    # In config/application.rb
    config.action_view.sanitized_allowed_tags = ["select", "style"]
    ```

    (see https://guides.rubyonrails.org/configuring.html#configuring-action-view)

  2. Using the class method `Rails::Html::SafeListSanitizer.allowed_tags=`:

    ```ruby
    # class-level option
    Rails::Html::SafeListSanitizer.allowed_tags = ["select", "style"]
    ```

  All users overriding the allowed tags by either of the above mechanisms to include both "select" and "style" should either upgrade or use one of the workarounds immediately.

  NOTE: Code is _not_ impacted if allowed tags are overridden using either of the following mechanisms:

  - the `:tags` option to the Action View helper method `sanitize`.
  - the `:tags` option to the instance method `SafeListSanitizer#sanitize`.


  ## Workarounds

  Remove either "select" or "style" from the overridden allowed tags.


  ## References

  - [CWE - CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') (4.9)](https://cwe.mitre.org/data/definitions/79.html)
  - https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-32209
  - https://hackerone.com/reports/1654310


  ## Credit

  This vulnerability was responsibly reported by Dominic Breuker.
severity: MODERATE
cvss:
  score: 0.0
  vectorString: 
references:
- url: https://github.com/rails/rails-html-sanitizer/security/advisories/GHSA-rrfc-7g8p-99q8
- url: https://hackerone.com/reports/1654310
- url: https://github.com/rubysec/ruby-advisory-db/blob/master/gems/rails-html-sanitizer/CVE-2022-23520.yml
- url: https://github.com/advisories/GHSA-rrfc-7g8p-99q8
publishedAt: '2022-12-13T17:51:40Z'
withdrawnAt: 
vulnerabilities:
- package:
    name: rails-html-sanitizer
    ecosystem: RUBYGEMS
  vulnerableVersionRange: "< 1.4.4"
  firstPatchedVersion:
    identifier: 1.4.4
