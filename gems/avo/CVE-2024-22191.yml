---
gem: avo
cve: 2024-22191
ghsa: ghjv-mh6x-7q6h
url: https://github.com/avo-hq/avo/security/advisories/GHSA-ghjv-mh6x-7q6h
title: avo vulnerable to stored cross-site scripting (XSS) in key_value field
date: 2024-01-16
description: "### Summary\nA **stored cross-site scripting (XSS)** vulnerability was
  found in the **key_value** field of Avo v3.2.3. This vulnerability could allow an
  attacker to execute arbitrary JavaScript code in the victim's browser.\n\n### Details\nThe
  value of the key_value is inserted directly into the HTML code. In the current version
  of Avo (possibly also older versions), the value is not properly sanitized before
  it is inserted into the HTML code.\n\nThis vulnerability can be exploited by an
  attacker to inject malicious JavaScript code into the key_value field. When a victim
  views the page containing the malicious code, the code will be executed in their
  browser.\n\nIn [avo/fields/common/key_value_component.html.erb]( https://github.com/avo-hq/avo/blob/main/app/components/avo/fields/common/key_value_component.html.erb#L38C21-L38C33)
  the value is taken in lines **38** and **49** and seems to be interpreted directly
  as html in lines **44** and **55**.\n\n### PoC\n\n![POC](https://user-images.githubusercontent.com/26570201/295596307-5d4f563e-99c0-4981-a82e-fc42cfd902c5.gif)\n\n\nTo
  reproduce the vulnerability, follow these steps:\n\n1. Edit an entry with a key_value
  field.\n2. Enter the following payload into the value field:\n```POC\\\"> <script>alert(
  'XSS in key_value' );</script> <strong>Outside-tag</strong```\n3. Save the entry.\n4.
  Go to the index page and click on the eye icon next to the entry.\n\nThe malicious
  JavaScript code will be executed and an alert box will be displayed. \n_On the show
  and edit page the alert seems not to pop up, but the strong tag breaks out of the
  expected html tag_\n\n### Impact\nThis vulnerability could be used to steal sensitive
  information from victims that could be used to hijack victims' accounts or redirect
  them to malicious websites."
cvss_v3: 7.3
unaffected_versions:
- "<OPTIONAL: FILL IN SEE BELOW>"
patched_versions:
- "<FILL IN SEE BELOW>"


# GitHub advisory data below - **Remove this data before committing**
# Use this data to write patched_versions (and potentially unaffected_versions) above
---
identifiers:
- type: GHSA
  value: GHSA-ghjv-mh6x-7q6h
- type: CVE
  value: CVE-2024-22191
summary: avo vulnerable to stored cross-site scripting (XSS) in key_value field
description: "### Summary\nA **stored cross-site scripting (XSS)** vulnerability was
  found in the **key_value** field of Avo v3.2.3. This vulnerability could allow an
  attacker to execute arbitrary JavaScript code in the victim's browser.\n\n### Details\nThe
  value of the key_value is inserted directly into the HTML code. In the current version
  of Avo (possibly also older versions), the value is not properly sanitized before
  it is inserted into the HTML code.\n\nThis vulnerability can be exploited by an
  attacker to inject malicious JavaScript code into the key_value field. When a victim
  views the page containing the malicious code, the code will be executed in their
  browser.\n\nIn [avo/fields/common/key_value_component.html.erb]( https://github.com/avo-hq/avo/blob/main/app/components/avo/fields/common/key_value_component.html.erb#L38C21-L38C33)
  the value is taken in lines **38** and **49** and seems to be interpreted directly
  as html in lines **44** and **55**.\n\n### PoC\n\n![POC](https://user-images.githubusercontent.com/26570201/295596307-5d4f563e-99c0-4981-a82e-fc42cfd902c5.gif)\n\n\nTo
  reproduce the vulnerability, follow these steps:\n\n1. Edit an entry with a key_value
  field.\n2. Enter the following payload into the value field:\n```POC\\\"> <script>alert(
  'XSS in key_value' );</script> <strong>Outside-tag</strong```\n3. Save the entry.\n4.
  Go to the index page and click on the eye icon next to the entry.\n\nThe malicious
  JavaScript code will be executed and an alert box will be displayed. \n_On the show
  and edit page the alert seems not to pop up, but the strong tag breaks out of the
  expected html tag_\n\n### Impact\nThis vulnerability could be used to steal sensitive
  information from victims that could be used to hijack victims' accounts or redirect
  them to malicious websites."
severity: HIGH
cvss:
  score: 7.3
  vectorString: CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:U/C:H/I:H/A:N
references:
- url: https://github.com/avo-hq/avo/security/advisories/GHSA-ghjv-mh6x-7q6h
- url: https://github.com/avo-hq/avo/commit/51bb80b181cd8e31744bdc4e7f9b501c81172347
- url: https://github.com/advisories/GHSA-ghjv-mh6x-7q6h
publishedAt: '2024-01-16T15:24:00Z'
withdrawnAt: 
vulnerabilities:
- package:
    name: avo
    ecosystem: RUBYGEMS
  vulnerableVersionRange: "<= 3.2.3"
  firstPatchedVersion:
    identifier: 3.2.4
