---
gem: actionpack
cve: 2024-41128
ghsa: x76w-6vjr-8xgj
url: https://github.com/rails/rails/security/advisories/GHSA-x76w-6vjr-8xgj
title: Possible ReDoS vulnerability in query parameter filtering in Action Dispatch
date: 2024-10-15
description: |-
  There is a possible ReDoS vulnerability in the query parameter filtering routines of Action Dispatch. This vulnerability has been assigned the CVE identifier CVE-2024-41128.

  Impact
  ------

  Carefully crafted query parameters can cause query parameter filtering to take an unexpected amount of time, possibly resulting in a DoS vulnerability. All users running an affected release should either upgrade or apply the relevant patch immediately.

  Ruby 3.2 has mitigations for this problem, so Rails applications using Ruby 3.2 or newer are unaffected. Rails 8.0.0.beta1 depends on Ruby 3.2 or greater so is unaffected.


  Releases
  --------
  The fixed releases are available at the normal locations.

  Workarounds
  -----------
  Users on Ruby 3.2 are unaffected by this issue.


  Credits
  -------

  Thanks to [scyoon](https://hackerone.com/scyoon) for the report and patches!
unaffected_versions:
- "<OPTIONAL: FILL IN SEE BELOW>"
patched_versions:
- "<FILL IN SEE BELOW>"


# GitHub advisory data below - **Remove this data before committing**
# Use this data to write patched_versions (and potentially unaffected_versions) above
---
identifiers:
- type: GHSA
  value: GHSA-x76w-6vjr-8xgj
- type: CVE
  value: CVE-2024-41128
summary: Possible ReDoS vulnerability in query parameter filtering in Action Dispatch
description: |-
  There is a possible ReDoS vulnerability in the query parameter filtering routines of Action Dispatch. This vulnerability has been assigned the CVE identifier CVE-2024-41128.

  Impact
  ------

  Carefully crafted query parameters can cause query parameter filtering to take an unexpected amount of time, possibly resulting in a DoS vulnerability. All users running an affected release should either upgrade or apply the relevant patch immediately.

  Ruby 3.2 has mitigations for this problem, so Rails applications using Ruby 3.2 or newer are unaffected. Rails 8.0.0.beta1 depends on Ruby 3.2 or greater so is unaffected.


  Releases
  --------
  The fixed releases are available at the normal locations.

  Workarounds
  -----------
  Users on Ruby 3.2 are unaffected by this issue.


  Credits
  -------

  Thanks to [scyoon](https://hackerone.com/scyoon) for the report and patches!
severity: LOW
cvss:
  score: 0.0
  vectorString:
references:
- url: https://github.com/rails/rails/security/advisories/GHSA-x76w-6vjr-8xgj
- url: https://github.com/advisories/GHSA-x76w-6vjr-8xgj
publishedAt: '2024-10-15T23:35:33Z'
withdrawnAt:
vulnerabilities:
- package:
    name: actionpack
    ecosystem: RUBYGEMS
  vulnerableVersionRange: ">= 7.2.0, < 7.2.1.1"
  firstPatchedVersion:
    identifier: 7.2.1.1
- package:
    name: actionpack
    ecosystem: RUBYGEMS
  vulnerableVersionRange: ">= 7.1.0, < 7.1.4.1"
  firstPatchedVersion:
    identifier: 7.1.4.1
- package:
    name: actionpack
    ecosystem: RUBYGEMS
  vulnerableVersionRange: ">= 7.0.0, < 7.0.8.5"
  firstPatchedVersion:
    identifier: 7.0.8.5
- package:
    name: actionpack
    ecosystem: RUBYGEMS
  vulnerableVersionRange: ">= 3.1.0, < 6.1.7.9"
  firstPatchedVersion:
    identifier: 6.1.7.9
